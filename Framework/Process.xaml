<Activity mc:Ignorable="sap sap2010" x:Class="Process" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.Collections;assembly=System.Private.CoreLib" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:snm="clr-namespace:System.Net.Mail;assembly=System.Net.Mail" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_ExceptionReason" Type="InArgument(x:String)" />
    <x:Property Name="in_FilteredEmailsAttachments" Type="InArgument(scg:List(snm:MailMessage))" />
    <x:Property Name="in_FilteredEmails" Type="InArgument(scg:List(snm:MailMessage))" />
    <x:Property sap2010:Annotation.AnnotationText="Transaction item to be processed." Name="in_TransactionItem" Type="InArgument(scg:List(snm:MailMessage))" />
    <x:Property sap2010:Annotation.AnnotationText="Dictionary structure to store configuration data of the process (settings, constants and assets)." Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap:VirtualizedContainerService.HintSize>1157,657</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>System</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Text</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>UiPath.Mail.Activities.Business.ForEachMail</x:String>
      <x:String>UiPath.Mail.Activities.Business</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>System.Numerics</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.Excel.Model</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.GSuite.Activities.Drive.Enums</x:String>
      <x:String>UiPath.Shared.Activities.Utils</x:String>
      <x:String>UiPath.GSuite.Drive.Models</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.GSuite.Activities.Sheets.Enums</x:String>
      <x:String>UiPath.GSuite.Activities.Models</x:String>
      <x:String>UiPath.GSuite.Activities</x:String>
      <x:String>UiPath.Shared.Activities.ConnectionService.Contracts</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>UiPath.Mail.Activities.Enums</x:String>
      <x:String>UiPath.Mail.IMAP.Activities</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>NPOI.Core</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.GSuite.Activities</AssemblyReference>
      <AssemblyReference>System.Linq.Async.Queryable</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
      <AssemblyReference>System.Text.RegularExpressions</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>UiPath.GSuite</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities.Design</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Invoke major steps of the business process, which are usually implemented by multiple subworkflows.&#xA;&#xA;If a BusinessRuleException is thrown, the transaction is skipped. &#xA;If another kind of exception occurs, the current transaction can be retried. " DisplayName="Process" sap:VirtualizedContainerService.HintSize="1309,2449" sap2010:WorkflowViewState.IdRef="Sequence_2">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="Email" />
      <Variable x:TypeArguments="x:String" Name="Company" />
      <Variable x:TypeArguments="x:String" Name="Address" />
      <Variable x:TypeArguments="x:String" Name="VatId" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_Report" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_NewRecords" />
      <Variable x:TypeArguments="scg:List(snm:MailMessage)" Name="FilteredEmails" />
      <Variable x:TypeArguments="scg:List(snm:MailMessage)" Name="FilteredEmailsAttachments" />
      <Variable x:TypeArguments="x:String" Name="FilteredEmailsCount" />
      <Variable x:TypeArguments="x:String" Name="FilteredEmailsAttachmentsCount" />
      <Variable x:TypeArguments="x:String" Name="DateProcessed" />
      <Variable x:TypeArguments="x:String" Name="EmailSubject" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Assign DisplayName="Assign - Processing Date" sap:VirtualizedContainerService.HintSize="454,120" sap2010:WorkflowViewState.IdRef="Assign_3">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">
          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_85">DateProcessed</CSharpReference>
        </OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_104">DateTime.UtcNow.ToString("yyyy-MM-dd HH:mm:ss")</CSharpValue>
        </InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Assign - Count of Filtered Emails" sap:VirtualizedContainerService.HintSize="454,120" sap2010:WorkflowViewState.IdRef="Assign_4">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">
          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_68">FilteredEmailsCount</CSharpReference>
        </OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_92">in_FilteredEmails.Count.ToString()</CSharpValue>
        </InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Assign - Count of Filtered Emails with Attachments" sap:VirtualizedContainerService.HintSize="454,120" sap2010:WorkflowViewState.IdRef="Assign_5">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">
          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_69">FilteredEmailsAttachmentsCount</CSharpReference>
        </OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_93">in_FilteredEmailsAttachments.Count.ToString()</CSharpValue>
        </InArgument>
      </Assign.Value>
    </Assign>
    <If DisplayName="Check if there are filtered emails to extract metadata" sap:VirtualizedContainerService.HintSize="454,1611" sap2010:WorkflowViewState.IdRef="If_1">
      <If.Condition>
        <InArgument x:TypeArguments="x:Boolean">
          <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_96">in_FilteredEmails.Count &gt; 0</CSharpValue>
        </InArgument>
      </If.Condition>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="452,1234" sap2010:WorkflowViewState.IdRef="Sequence_21">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:String" Name="SenderName" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:BuildDataTable DisplayName="Build New Records Data Table " sap:VirtualizedContainerService.HintSize="418,92" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Date_x0020_Processed&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Sender_x0020_Name&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Company&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Address&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;VAT_x0020_ID&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Email&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Email_x0020_Subject&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;">
            <ui:BuildDataTable.DataTable>
              <OutArgument x:TypeArguments="sd:DataTable">
                <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_74">dt_NewRecords</CSharpReference>
              </OutArgument>
            </ui:BuildDataTable.DataTable>
          </ui:BuildDataTable>
          <ui:ForEach x:TypeArguments="snm:MailMessage" CurrentIndex="{x:Null}" DisplayName="For Each Filtered Email" sap:VirtualizedContainerService.HintSize="418,905" sap2010:WorkflowViewState.IdRef="ForEach`1_1">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="snm:MailMessage">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="snm:MailMessage" Name="currentMailMessage" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="416,770" sap2010:WorkflowViewState.IdRef="Sequence_15">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:String" Name="NewRecords" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Extract  Metadata From Signature" sap:VirtualizedContainerService.HintSize="382,186" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Dispatcher\\SignatureParsing\\ExtractMetadataFromSignature.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="snm:MailMessage" x:Key="in_CurrentMail">
                        <CSharpValue x:TypeArguments="snm:MailMessage" sap2010:WorkflowViewState.IdRef="CSharpValue`1_108">currentMailMessage</CSharpValue>
                      </InArgument>
                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
                        <CSharpValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_107">in_Config</CSharpValue>
                      </InArgument>
                      <InOutArgument x:TypeArguments="scg:List(snm:MailMessage)" x:Key="io_FilteredEmails">
                        <CSharpReference x:TypeArguments="scg:List(snm:MailMessage)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_61">in_FilteredEmails</CSharpReference>
                      </InOutArgument>
                      <InArgument x:TypeArguments="scg:List(snm:MailMessage)" x:Key="in_TransactionItem">
                        <CSharpValue x:TypeArguments="scg:List(snm:MailMessage)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_129">in_TransactionItem</CSharpValue>
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_dateProcessed">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_112">DateProcessed</CSharpValue>
                      </InArgument>
                      <OutArgument x:TypeArguments="x:String" x:Key="out_SenderName">
                        <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_83">SenderName</CSharpReference>
                      </OutArgument>
                      <OutArgument x:TypeArguments="x:String" x:Key="out_Email">
                        <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_78">Email</CSharpReference>
                      </OutArgument>
                      <OutArgument x:TypeArguments="x:String" x:Key="out_Company">
                        <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_79">Company</CSharpReference>
                      </OutArgument>
                      <OutArgument x:TypeArguments="x:String" x:Key="out_Address">
                        <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_80">Address</CSharpReference>
                      </OutArgument>
                      <OutArgument x:TypeArguments="x:String" x:Key="out_VatId">
                        <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_81">VatId</CSharpReference>
                      </OutArgument>
                      <OutArgument x:TypeArguments="x:String" x:Key="out_EmailSubject">
                        <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_84">EmailSubject</CSharpReference>
                      </OutArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                  <ui:AddDataRow DataRow="{x:Null}" DisplayName="Add Data Row - The New Record" sap:VirtualizedContainerService.HintSize="382,233" sap2010:WorkflowViewState.IdRef="AddDataRow_1">
                    <ui:AddDataRow.ArrayRow>
                      <InArgument x:TypeArguments="s:Object[]">
                        <CSharpValue x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_113">new object[] { DateProcessed, SenderName, Company, Address, VatId, Email, EmailSubject }</CSharpValue>
                      </InArgument>
                    </ui:AddDataRow.ArrayRow>
                    <ui:AddDataRow.DataTable>
                      <InOutArgument x:TypeArguments="sd:DataTable">
                        <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_75">dt_NewRecords</CSharpReference>
                      </InOutArgument>
                    </ui:AddDataRow.DataTable>
                  </ui:AddDataRow>
                  <ui:OutputDataTable DisplayName="Output New Records Data Table as Text" sap:VirtualizedContainerService.HintSize="382,117" sap2010:WorkflowViewState.IdRef="OutputDataTable_1">
                    <ui:OutputDataTable.DataTable>
                      <InArgument x:TypeArguments="sd:DataTable">
                        <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_110">dt_NewRecords</CSharpValue>
                      </InArgument>
                    </ui:OutputDataTable.DataTable>
                    <ui:OutputDataTable.Text>
                      <OutArgument x:TypeArguments="x:String">
                        <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_76">NewRecords</CSharpReference>
                      </OutArgument>
                    </ui:OutputDataTable.Text>
                  </ui:OutputDataTable>
                  <ui:LogMessage DisplayName="Log Message - NewRecords Data Table" sap:VirtualizedContainerService.HintSize="382,174" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info">
                    <ui:LogMessage.Message>
                      <InArgument x:TypeArguments="x:Object">
                        <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_111">$"New Records: {NewRecords}"</CSharpValue>
                      </InArgument>
                    </ui:LogMessage.Message>
                  </ui:LogMessage>
                </Sequence>
              </ActivityAction>
            </ui:ForEach.Body>
            <ui:ForEach.Values>
              <InArgument x:TypeArguments="sc:IEnumerable">
                <CSharpValue x:TypeArguments="sc:IEnumerable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_41">in_FilteredEmails</CSharpValue>
              </InArgument>
            </ui:ForEach.Values>
          </ui:ForEach>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Append Metadata To Excel" sap:VirtualizedContainerService.HintSize="418,177" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Dispatcher\\Excel\\AppendMetadataToExcel.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="scg:List(snm:MailMessage)" x:Key="in_TransactionItem">
                <CSharpValue x:TypeArguments="scg:List(snm:MailMessage)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_119">in_TransactionItem</CSharpValue>
              </InArgument>
              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
                <CSharpValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_43">in_Config</CSharpValue>
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_DateProcessed">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_120">DateProcessed</CSharpValue>
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_SenderName">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_121">SenderName</CSharpValue>
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_Email">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_122">Email</CSharpValue>
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_EmailSubject">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_123">EmailSubject</CSharpValue>
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_Company">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_124">Company</CSharpValue>
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_Address">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_125">Address</CSharpValue>
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_VatId">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_130">VatId</CSharpValue>
              </InArgument>
              <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_dt_Report">
                <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_52">dt_Report</CSharpReference>
              </InOutArgument>
              <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_dt_NewRecords">
                <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_54">dt_NewRecords</CSharpReference>
              </InOutArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_ExceptionReason">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_105">in_ExceptionReason</CSharpValue>
              </InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="452,234" sap2010:WorkflowViewState.IdRef="Sequence_22">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:LogMessage DisplayName="Log Message - No filtered emails" sap:VirtualizedContainerService.HintSize="418,174" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Warn">
            <ui:LogMessage.Message>
              <InArgument x:TypeArguments="x:Object">
                <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_97">"No filtered emails to process"</CSharpValue>
              </InArgument>
            </ui:LogMessage.Message>
          </ui:LogMessage>
        </Sequence>
      </If.Else>
    </If>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Add Metadata and Summary Data To Queue" sap:VirtualizedContainerService.HintSize="454,186" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Dispatcher\\Queue\\AddToQueue.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_FilteredEmailsAttachmentsCount">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_126">FilteredEmailsAttachmentsCount</CSharpValue>
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_FilteredEmailsCount">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_90">FilteredEmailsCount</CSharpValue>
        </InArgument>
        <InOutArgument x:TypeArguments="scg:List(snm:MailMessage)" x:Key="io_FilteredEmailsAttachments">
          <CSharpReference x:TypeArguments="scg:List(snm:MailMessage)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_87">in_FilteredEmailsAttachments</CSharpReference>
        </InOutArgument>
        <InOutArgument x:TypeArguments="scg:List(snm:MailMessage)" x:Key="io_FilteredEmails">
          <CSharpReference x:TypeArguments="scg:List(snm:MailMessage)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_60">FilteredEmails</CSharpReference>
        </InOutArgument>
        <InArgument x:TypeArguments="scg:List(snm:MailMessage)" x:Key="in_TransactionItem">
          <CSharpValue x:TypeArguments="scg:List(snm:MailMessage)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_127">in_TransactionItem</CSharpValue>
        </InArgument>
        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
          <CSharpValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_71">in_Config</CSharpValue>
        </InArgument>
        <InArgument x:TypeArguments="sd:DataTable" x:Key="in_dt_NewRecords">
          <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_128">dt_NewRecords</CSharpValue>
        </InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Move Processed Emails" sap:VirtualizedContainerService.HintSize="454,177" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="Dispatcher\\Email\\MoveProcessedEmails.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
          <CSharpValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_106">in_Config</CSharpValue>
        </InArgument>
        <InArgument x:TypeArguments="scg:List(snm:MailMessage)" x:Key="in_FilteredEmails">
          <CSharpValue x:TypeArguments="scg:List(snm:MailMessage)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_131">in_FilteredEmails</CSharpValue>
        </InArgument>
        <InArgument x:TypeArguments="scg:List(snm:MailMessage)" x:Key="in_FilteredEmailsAttachments">
          <CSharpValue x:TypeArguments="scg:List(snm:MailMessage)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_132">in_FilteredEmailsAttachments</CSharpValue>
        </InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
  </Sequence>
</Activity>